<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shu.car_repair.mapper.RepairmentMapper">
  <resultMap id="BaseResultMap" type="com.shu.car_repair.entity.Repairment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="repairment_id" jdbcType="INTEGER" property="repairmentId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.shu.car_repair.entity.Repairment">
    <result column="material" jdbcType="LONGVARCHAR" property="material" />
  </resultMap>
  <sql id="Base_Column_List">
    id, repairment_id, name
  </sql>
  <sql id="Blob_Column_List">
    material
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from repairment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from repairment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shu.car_repair.entity.Repairment">
    insert into repairment (id, repairment_id, name, 
      material)
    values (#{id,jdbcType=INTEGER}, #{repairmentId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{material,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shu.car_repair.entity.Repairment">
    insert into repairment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="repairmentId != null">
        repairment_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="material != null">
        material,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="repairmentId != null">
        #{repairmentId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="material != null">
        #{material,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shu.car_repair.entity.Repairment">
    update repairment
    <set>
      <if test="repairmentId != null">
        repairment_id = #{repairmentId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="material != null">
        material = #{material,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.shu.car_repair.entity.Repairment">
    update repairment
    set repairment_id = #{repairmentId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      material = #{material,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shu.car_repair.entity.Repairment">
    update repairment
    set repairment_id = #{repairmentId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAllRepairments" resultType="com.shu.car_repair.entity.Repairment">
    select * from repairment
  </select>
</mapper>